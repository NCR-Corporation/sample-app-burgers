apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}
  labels:
    app: {{ .Values.Master.App.Prefix }}
    version: {{ $.Chart.Version }}
    release: {{ $.Release.Name }}
spec:
  {{- if .Values.Scaling.Enabled }}
  replicas: {{ .Values.Scaling.DefaultReplicas }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.Master.App.Prefix }}
      version: {{ $.Chart.Version }}
      release: {{ $.Release.Name }}
  strategy: {}
  template:
    metadata:
      labels:
        app: {{ .Values.Master.App.Prefix }}
        version: {{ $.Chart.Version }}
        release: {{ $.Release.Name }}
    spec:
      restartPolicy: Always
      volumes:
        - name: shared-data
          emptyDir: {}
      containers:
        - name: {{ $.Release.Name }}-django
          image: {{ .Values.Image.Domain }}/{{ .Values.Image.Project }}/{{ .Values.Master.App.Prefix }}-django:{{ $.Chart.Version }}
          imagePullPolicy: {{ .Values.Master.ImagePullPolicy }}
          env:
            - name: URL_BASE
              value: {{ quote .Values.Ingress.Host }}
            - name: SECRET_KEY
              value: {{ quote .Values.Burgers.SecretKey }}
            - name: NEP_ORGANIZATION
              value: {{ quote .Values.Burgers.NepOrganization }}
            - name: HMAC_SHARED_KEY
              value: {{ quote .Values.Burgers.HmacSharedKey }}
            - name: HMAC_SECRET_KEY
              value: {{ quote .Values.Burgers.HmacSecretKey }}
            - name: LOCATIONS
              value: {{ quote .Values.Burgers.Locations }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: shared-data
              mountPath: /app/dist
        - name: {{ $.Release.Name }}-nginx
          image: {{ .Values.Image.Domain }}/{{ .Values.Image.Project }}/{{ .Values.Master.App.Prefix }}-nginx:{{ $.Chart.Version }}
          imagePullPolicy: {{ .Values.Master.ImagePullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: shared-data
              mountPath: /app/dist
          livenessProbe:
            httpGet:
              path: /static/debug_toolbar/css/toolbar.css
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /static/debug_toolbar/css/toolbar.css
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          {{- if .Values.Scaling.Enabled }}
          resources:
            requests:
              cpu: {{ .Values.Resources.MinCpu | quote }}
              memory: {{ .Values.Resources.MinMemory | quote }}
            limits:
              cpu: {{ .Values.Resources.MaxCpu | quote }}
              memory: {{ .Values.Resources.MaxMemory | quote }}
          {{- end }}
status: {}
